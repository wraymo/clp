version: "3"

vars:
  BUILD_DIR: "{{.TASKFILE_DIR}}/build"
  CORE_COMPONENT_BUILD_DIR: "{{.TASKFILE_DIR}}/build/core"
  PACKAGE_BUILD_DIR: "{{.TASKFILE_DIR}}/build/clp-package"
  PACKAGE_VERSION: "0.0.3-dev"
  PYTHON_VERSION:
    sh: "python3 -c \"import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')\""

tasks:
  default:
    deps: ["package"]

  clean:
    cmds:
      - "rm -rf '{{.BUILD_DIR}}'"
      - task: "clean_python_component"
        vars:
          COMPONENT: "clp-package-utils"
      - task: "clean_python_component"
        vars:
          COMPONENT: "clp-py-utils"
      - task: "clean_python_component"
        vars:
          COMPONENT: "compression-job-handler"
      - task: "clean_python_component"
        vars:
          COMPONENT: "job-orchestration"

  clean_package:
    cmds:
      - "rm -rf '{{.PACKAGE_BUILD_DIR}}'"

  package_tar:
    deps:
      - "package"
    vars:
      VERSIONED_PACKAGE_NAME:
        sh: |
          source /etc/os-release
          echo "clp-package-${ID}-${VERSION_CODENAME}-$(arch)-v{{.PACKAGE_VERSION}}"
    dir: "{{.BUILD_DIR}}"
    cmds:
      - "rm -rf '{{.VERSIONED_PACKAGE_NAME}}' '{{.VERSIONED_PACKAGE_NAME}}.tar.gz'"
      - "ln -s '{{.PACKAGE_BUILD_DIR}}' '{{.VERSIONED_PACKAGE_NAME}}'"
      - "tar czf '{{.VERSIONED_PACKAGE_NAME}}.tar.gz' --dereference '{{.VERSIONED_PACKAGE_NAME}}'"

  package:
    deps:
      - "core"
      - task: "python_component"
        vars:
          COMPONENT: "clp-package-utils"
      - task: "python_component"
        vars:
          COMPONENT: "clp-py-utils"
      - task: "python_component"
        vars:
          COMPONENT: "compression-job-handler"
      - task: "python_component"
        vars:
          COMPONENT: "job-orchestration"
    cmds:
      - task: "clean_package"
      - "mkdir -p '{{.PACKAGE_BUILD_DIR}}'"
      - "rsync -a components/package-template/src/ '{{.PACKAGE_BUILD_DIR}}'"
      - "mkdir -p '{{.PACKAGE_BUILD_DIR}}/lib/python3/site-packages'"
      - >-
        pip3 install --upgrade
        components/clp-package-utils/dist/*.whl
        components/clp-py-utils/dist/*.whl
        components/compression-job-handler/dist/*.whl
        components/job-orchestration/dist/*.whl
        -t "{{.PACKAGE_BUILD_DIR}}/lib/python3/site-packages"
      - "mkdir -p '{{.PACKAGE_BUILD_DIR}}/bin'"
      - >-
        rsync -a
        "{{.CORE_COMPONENT_BUILD_DIR}}/clg"
        "{{.CORE_COMPONENT_BUILD_DIR}}/clo"
        "{{.CORE_COMPONENT_BUILD_DIR}}/clp"
        "{{.PACKAGE_BUILD_DIR}}/bin/"
    sources:
      - "{{.CORE_COMPONENT_BUILD_DIR}}/clg"
      - "{{.CORE_COMPONENT_BUILD_DIR}}/clo"
      - "{{.CORE_COMPONENT_BUILD_DIR}}/clp"
      - "{{.TASKFILE_DIR}}/Taskfile.yml"
      - "components/clp-package-utils/dist/*.whl"
      - "components/clp-py-utils/dist/*.whl"
      - "components/compression-job-handler/dist/*.whl"
      - "components/job-orchestration/dist/*.whl"
      - "components/package-template/src/**"

  core:
    internal: true
    deps: ["core_submodules"]
    vars:
      SRC_DIR: "components/core"
    cmds:
      - "mkdir -p '{{.CORE_COMPONENT_BUILD_DIR}}'"
      - "cmake -S '{{.SRC_DIR}}' -B '{{.CORE_COMPONENT_BUILD_DIR}}'"
      - "cmake --build '{{.CORE_COMPONENT_BUILD_DIR}}' --parallel --target clg clo clp"
    sources:
      - "{{.SRC_DIR}}/cmake/**"
      - "{{.SRC_DIR}}/CMakeLists.txt"
      - "{{.SRC_DIR}}/src/**"
      - "{{.SRC_DIR}}/submodules/**"
      - "{{.TASKFILE_DIR}}/Taskfile.yml"

  core_submodules:
    internal: true
    vars:
      SRC_DIR: "components/core"
    cmds:
      - "{{.SRC_DIR}}/tools/scripts/deps-download/download-all.sh"
    sources:
      - "{{.SRC_DIR}}/tools/script/deps-download/**"
      - "{{.TASKFILE_DIR}}/Taskfile.yml"

  python_component:
    internal: true
    requires:
      vars: ["COMPONENT"]
    label: "{{.COMPONENT}}"
    deps:
      - task: "component_venv"
        vars:
          COMPONENT: "{{.COMPONENT}}"
    vars:
      PACKAGE:
        sh: "echo {{.COMPONENT}} | tr - _"
      VENV_DIR: "{{.BUILD_DIR}}/{{.COMPONENT}}/venv"
    dir: "components/{{.COMPONENT}}"
    cmds:
      - task: "clean_python_component"
        vars:
          COMPONENT: "{{.COMPONENT}}"
      - |-
        . "{{.VENV_DIR}}/bin/activate"
        poetry build --format wheel
    sources:
      - "{{.PACKAGE}}/**"
      - "{{.TASKFILE_DIR}}/requirements.txt"
      - "{{.TASKFILE_DIR}}/Taskfile.yml"
      - "pyproject.toml"

  component_venv:
    internal: true
    requires:
      vars: ["COMPONENT"]
    label: "{{.COMPONENT}}_venv"
    dir: "components/{{.COMPONENT}}"
    vars:
      VENV_DIR: "{{.BUILD_DIR}}/{{.COMPONENT}}/venv"
    cmds:
      - "rm -rf '{{.VENV_DIR}}'"
      - "python3 -m venv '{{.VENV_DIR}}'"
      - |-
        . "{{.VENV_DIR}}/bin/activate"
        pip3 install --upgrade -r "{{.TASKFILE_DIR}}/requirements.txt"
        poetry update
    sources:
      - "{{.TASKFILE_DIR}}/requirements.txt"
      - "{{.TASKFILE_DIR}}/Taskfile.yml"
      - "pyproject.toml"

  clean_python_component:
    internal: true
    requires:
      vars: ["COMPONENT"]
    label: "clean_{{.COMPONENT}}"
    dir: "components/{{.COMPONENT}}"
    cmds:
      - "rm -rf dist"
