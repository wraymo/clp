name: "clp-core-build-containers"
description: "Builds and publishes container images for CLP-core's dependencies"

inputs:
  image_name:
    description: "Name of the image (without registry or repository) to create"
    required: true
  docker_context:
    description: "The context directory for Docker when building the image"
    required: true
  docker_file:
    description: "The Dockerfile to use to build the image"
    required: true
  push_deps_image:
    description: "Whether to publish a container image containing CLP's dependencies"
    required: true
  token:
    description: "Registry token"
    required: true

runs:
  using: "composite"
  steps:
    - uses: "docker/setup-buildx-action@v3"

    - if: "inputs.push_deps_image == 'true'"
      uses: "docker/login-action@v3"
      with:
        registry: "ghcr.io"
        username: "${{github.actor}}"
        password: "${{inputs.token}}"

    - id: "get_image_props"
      shell: "bash"
      run: |
        if [[ "${{inputs.push_deps_image}}" == "true" ]] ; then
          # Docker doesn't support repository names with uppercase characters, so we convert to
          # lowercase here.
          repository=$(echo '${{github.repository}}' | tr '[:upper:]' '[:lower:]')

          echo "qualified_image_name=ghcr.io/${repository}/${{inputs.image_name}}" \
            >> "$GITHUB_OUTPUT"
          echo "branch=${{github.ref_name}}" >> "$GITHUB_OUTPUT"
          echo "output=type=registry" >> "$GITHUB_OUTPUT"
        else
          image_path="/tmp/${{inputs.image_name}}.tar"
          echo "image_path=${image_path}" >> "$GITHUB_OUTPUT"

          echo "qualified_image_name=${{inputs.image_name}}" >> "$GITHUB_OUTPUT"
          echo "branch=latest" >> "$GITHUB_OUTPUT"
          echo "output=type=docker,dest=${image_path}" >> "$GITHUB_OUTPUT"
        fi

    - id: "deps_image_meta"
      uses: "docker/metadata-action@v5"
      with:
        images: "${{steps.get_image_props.outputs.qualified_image_name}}"
        tags: |
          type=raw,value=${{steps.get_image_props.outputs.branch}}

    - uses: "docker/build-push-action@v5"
      with:
        context: "${{inputs.docker_context}}"
        file: "${{inputs.docker_file}}"
        labels: "${{steps.deps_image_meta.outputs.labels}}"
        tags: "${{steps.deps_image_meta.outputs.tags}}"
        outputs: "${{steps.get_image_props.outputs.output}}"

    - if: "inputs.push_deps_image == 'false'"
      uses: "actions/upload-artifact@v4"
      with:
        name: "${{steps.get_image_props.outputs.qualified_image_name}}"
        path: "${{steps.get_image_props.outputs.image_path}}"
        retention-days: 1
